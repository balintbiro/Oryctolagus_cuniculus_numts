sample2=sample2,
population1=population1,
population2=population2)
z_score
z_score
#do the two sampeld z test with built in function
z_score<-z.test(x=population1,
y=population2,
sigma.x=sd(population1),
sigma.y=sd(population2))
#do the two sampeld z test with built in function
z_score<-z.test(x=population1,
sigma.x=sd(population1),
y=population2,
sigma.y=sd(population2))
#do the two sampeld z test with built in function
z_score<-z.test(x=population1,
sigma.x=sd(population1),
y=population2,
sigma.y=sd(population2),
conf.level=0.95)
x <- c(7.8, 6.6, 6.5, 7.4, 7.3, 7., 6.4, 7.1, 6.7, 7.6, 6.8)
y <- c(4.5, 5.4, 6.1, 6.1, 5.4, 5., 4.1, 5.5)
z.test(x, sigma.x=0.5, y, sigma.y=0.5, conf.level=0.90)
x <- c(7.8, 6.6, 6.5, 7.4, 7.3, 7., 6.4, 7.1, 6.7, 7.6, 6.8)
y <- c(4.5, 5.4, 6.1, 6.1, 5.4, 5., 4.1, 5.5)
z.test(x, sigma.x=0.5, y, sigma.y=0.5, conf.level=0.90)
#do the two sampeld z test with built in function
z_score<-z.test(x=population1,
sigma.x=sd(population1),
y=population2,
sigma.y=sd(population2),
mu=3,
conf.level=0.95)
#do the two sampeld z test with built in function
z_score<-z.test(x=population1,
sigma.x=sd(population1),
y=population2,
sigma.y=sd(population2),
conf.level=0.95)
library("biomaRt")
library("biomaRt"),
numts<-read.table('Z:/balint/numt/3numt_array.csv',nrows=1,
header=FALSE,
sep=',')
numts
library("biomaRt"),
numts_header<-read.table('Z:/balint/numt/3numt_array.csv',nrows=1,
header=FALSE,
sep=',')
numts<-read.table('Z:/balint/numt/3numt_array.csv',
header=FALSE,
sep=',',
skip=1)
numts
numts.head()
head(numts)
library("biomaRt"),
numts<-read.table('Z:/balint/numt/3numt_array.csv',
header=FALSE,
sep=',')
numts<-read.table('Z:/balint/numt/3numt_array.csv',
header=FALSE,
sep=',')
numts
numts<-read.csv('Z:/balint/numt/3numt_array.csv',
header=FALSE,
sep=',')
numts[:2]
numts[2]
numts
numts<-read.csv('Z:/balint/numt/3numt_array.csv',
header=TRUE,
sep=',')
head(numts)
numts['e_value']
head(numts)
ensembl_gene_ids<-numts['ensembl_gene_id']
ensembl_gene_ids
ensembl_gene_ids<-DropNA(ensembl_gene_ids)
ensembl_data<-dropNA(numts,
Var="ensembl_gene_id")
ensembl_data<-DropNA(numts,
Var="ensembl_gene_id")
ensembl_gene_ids<-numts['ensembl_gene_id']
ensembl_gene_ids
ensembl_gene_ids<-c(numts['ensembl_gene_id'])
ensembl_gene_ids<-ensembl_gene_ids[!is.na(ensembl_gene_ids)]
ensembl_gene_ids
ensembl_data<-c(numts['ensembl_gene_id'])
ensembl_data
ensembl_gene_ids<-ensembl_data[ensembl_data !=""]
ensembl_gene_ids
ensembl_gene_ids<-ensembl_data[ensembl_data !=" "]
ensembl_gene_ids<-ensembl_data[ensembl_data !=" "]
ensembl_gene_ids
numts<-read.csv('Z:/balint/numt/3numt_array.csv',
header=TRUE,
sep=',')
ensembl_data<-c(numts['ensembl_gene_id'])
ensembl_data
ensembl_data[ensembl_data!=""]
ensembl_data[ensembl_data!=" "]
ensembl_data<-numts['ensembl_gene_id']
ensembl_data
ensembl_data[ensembl_data!=""]
ensembl_gene_ids<-ensembl_data[ensembl_data!=""]
ensembl_gene_ids
ensembl_gene_ids<-c(ensembl_data[ensembl_data!=""])
ensembl_gene_ids
datasets <- listDatasets(ensembl)
listEnsembl()
mart = useMart(biomart = "ensembl", dataset = "musmusculus_gene_ensembl")
listDatasets()
ensembl <- useEnsembl(biomart = "genes")
mart = useMart(’ensembl’)
mart = useMart("ensembl")
listDatasets(mart)
mart = useMart(biomart = "ensembl", dataset = "ocuniculus_gene_ensembl")
mart
dat = getBM(
values = ensembl_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description"),
mart = mart
)
listMarts()
mart = useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "ocuniculus_gene_ensembl")
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description"),
mart = mart
)
dat
type(dat)
typeof(dat)
dat[1]
dat[0]
dat[2]
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "gene_name", "description"),
mart = mart
)
external_
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description"),
mart = mart
)
dat[2]
listAttributes()
listAttributes(mart)
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description", "pdb"),
mart = mart
)
dat
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description", "uniprotswissprot"),
mart = mart
)
dat
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description", "name_1006"),
mart = mart
)
dat
listAttributes(mart)
dat[4]
go_terms<-c(dat[4])
go_terms
go_terms<-c(dat[4][dat[4][!=""]])
go_terms<-dat[4]
go_terms
go_terms_with_blanks<-dat[4]
go_terms<-go_terms_with_blanks[go_terms_with_blanks[!=""]]
go_terms<-go_terms_with_blanks[go_terms_with_blanks!=""]
go_terms
go_terms<-c(go_terms_with_blanks[go_terms_with_blanks!=""])
go_terms
go_terms<-go_terms_with_blanks[go_terms_with_blanks!=""]
hist(go_terms)
barplot(go_terms)
table(go_terms)
proba<-table(go_terms)
proba[proba>1]
hist(proba[proba>1])
dat
dat["external_gene_name"]
listAttributes(mart)
#get the corresponding information for every ensembl gene id
dat = getBM(
values = ensembl_gene_ids,
filters = c("ensembl_gene_id"),
attributes = c("ensembl_gene_id", "external_gene_name", "description", "uniprotsptrembl", "name_1006"),
mart = mart
)
mart[4]
dat[4]
go_terms_with_blanks<-dat[5]
go_terms<-go_terms_with_blanks[go_terms_with_blanks!=""]
go_terms
listAttributes(mart)
protein_names<-protein_names_with_blank[protein_names_with_blank!=""]
#get protein names
protein_names_with_blank<-dat[4]
protein_names<-protein_names_with_blank[protein_names_with_blank!=""]
protein_names
protein_names<-unique(protein_names_with_blank[protein_names_with_blank!=""])
protein_names
length(protein_names)
noquote(protein_names)
#load biomart
library("biomaRt")
#read csv
numts<-read.csv('Z:/balint/numt/3numt_array.csv',
header=TRUE,
sep=',')
#select ensembl gene ids
ensembl_data<-numts['ensembl_gene_id']
#installing the RIdeogram package (just for the first time)
#install.packages("RIdeogram")
#load the required module
require(RIdeogram)
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
getwd()
setwd('../numt/codes/')
getwd()
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/scaffold_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/scaffold_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/gene_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/gene_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/gene_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/gene_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/scaffold_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/scaffold_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/scaffold_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/scaffold_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/gene_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/gene_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/gene_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/gene_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
