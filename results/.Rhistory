#reading the file into a vector
numt_ends<-scan('Z:/balint/numt/Michael/data/article_data_for_testing/numt_g_ends.fa', what="")
numt_ends<-DNAStringSet(numt_ends)
#importing the required libraries
library(Biostrings)
library(TFBSTools)
#reading the file into a vector
numt_ends<-scan('Z:/balint/numt/Michael/data/article_data_for_testing/numt_g_ends.fa', what="")
numt_ends<-DNAStringSet(numt_ends)
#create consensus
consensusMatrix(numt_ends, baseOnly=TRUE)
#position frequency matrix
pfm.count<-consensusMatrix(numt_ends, baseOnly=T)[1:4,]
pfm<-PFMatrix(name='numt_ends', profileMatrix=pfm.count)
#information content matrix
icm<-toICM(pfm, pseudocounts=0)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
#installing the RIdeogram package (just for the first time)
#install.packages("RIdeogram")
#load the required module
require(RIdeogram)
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#installing the RIdeogram package (just for the first time)
#install.packages("RIdeogram")
#load the required module
require(RIdeogram)
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=600)#the svg filename cannot be modified, so it has to be changed after the creation,
convertSVG("chromosome.svg", device = "png")#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/chromosome_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/chromosome_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/chromosome_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png")#the svg filename cannot be modified, so it has to be changed after the creation,
convertSVG("chromosome.svg", device = "png", dpi=600)#the svg filename cannot be modified, so it has to be changed after the creation,
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
convertSVG("chromosome.svg", device = "png", dpi=600)#the svg filename cannot be modified, so it has to be changed after the creation,
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=600)#the svg filename cannot be modified, so it has to be changed after the creation,
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/scaffold_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/scaffold_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/scaffold_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#get the karyotype header
karyotype_header<-read.table('../results/gene_synteny_dual_karyotype.csv',
nrows=1,
header=FALSE,
sep=',')
#get the karyotype dataframe
karyotype_dual_comparison<-read.table('../results/gene_synteny_dual_karyotype.csv',
header=FALSE,
sep=',',
skip=1)
#add header to the dataframe
colnames(karyotype_dual_comparison)<-karyotype_header
#get the synteny header
synteny_header<-read.table('../results/gene_synteny_dual_synteny.csv',
nrows=1,
header=FALSE,
sep=',')
#get the synteny dataframe
synteny_dual_comparison<-read.table('../results/gene_synteny_dual_synteny.csv',
header=FALSE,
sep=',',
skip=1)
#add header to synteny dataframe
colnames(synteny_dual_comparison)<-synteny_header
ideogram(karyotype = karyotype_dual_comparison,
synteny = synteny_dual_comparison)
#set the working directory
setwd('../results/')
convertSVG("chromosome.svg", device = "png", dpi=1200)#the svg filename cannot be modified, so it has to be changed after the creation,
#importing the required libraries
library(Biostrings)
library(TFBSTools)
#reading the file into a vector
numt_ends<-scan('../results/numt_g_ends.fa', what="")
numt_ends<-DNAStringSet(numt_ends)
#create consensus
consensusMatrix(numt_ends, baseOnly=TRUE)
#position frequency matrix
pfm.count<-consensusMatrix(numt_ends, baseOnly=T)[1:4,]
pfm<-PFMatrix(name='numt_ends', profileMatrix=pfm.count)
#information content matrix
icm<-toICM(pfm, pseudocounts=0)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
#export the sequence logo
setwd('../results/')
png(file='seqlogo.png', dpi=600)
png(file='seqlogo.png', res=600)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
dev.off()
png(file='seqlogo.png', width=5, height=3.5, res=600)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
dev.off()
#export the sequence logo
setwd('../results/')
png(file='seqlogo.png', width=5, height=3.5, res=600)
#export the sequence logo
setwd('../results/')
png(file='seqlogo.png', width=400, height=300, res=600)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
dev.off()
#export the sequence logo
setwd('../results/')
png(file='seqlogo.png', width=400, height=300, units="in", res=600)
#create sequence logo; ic.scale refers to information content scale in bits
seqLogo(icm, ic.scale=F)
